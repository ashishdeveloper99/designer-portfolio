"use strict";

var _require = require('../helpers/constants'),
    URI = _require.URI;

var HTTP_METHODS = require('../helpers/http_methods');

var _require2 = require('../helpers/request_handler'),
    requestHandler = _require2.requestHandler;

var headers;

var objectTypeMethods = function objectTypeMethods(bucket_config) {
  return {
    getObjectTypes: function getObjectTypes() {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types?read_key=").concat(bucket_config.read_key);
      return requestHandler(HTTP_METHODS.GET, endpoint);
    },
    getObjectType: function getObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug, "?read_key=").concat(bucket_config.read_key);
      return requestHandler(HTTP_METHODS.GET, endpoint);
    },
    addObjectType: function addObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types");

      if (bucket_config.write_key) {
        headers = {
          Authorization: "Bearer ".concat(bucket_config.write_key)
        };
      }

      return requestHandler(HTTP_METHODS.POST, endpoint, params, headers);
    },
    editObjectType: function editObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug);

      if (bucket_config.write_key) {
        headers = {
          Authorization: "Bearer ".concat(bucket_config.write_key)
        };
      } // Remove slug


      delete params.slug;
      return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers);
    },
    deleteObjectType: function deleteObjectType(params) {
      var endpoint = "".concat(URI, "/buckets/").concat(bucket_config.slug, "/object-types/").concat(params.slug);

      if (bucket_config.write_key) {
        headers = {
          Authorization: "Bearer ".concat(bucket_config.write_key)
        };
      }

      return requestHandler(HTTP_METHODS.DELETE, endpoint, null, headers);
    }
  };
};

module.exports = objectTypeMethods;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiVVJJIiwiSFRUUF9NRVRIT0RTIiwicmVxdWVzdEhhbmRsZXIiLCJoZWFkZXJzIiwib2JqZWN0VHlwZU1ldGhvZHMiLCJidWNrZXRfY29uZmlnIiwiZ2V0T2JqZWN0VHlwZXMiLCJlbmRwb2ludCIsInNsdWciLCJyZWFkX2tleSIsIkdFVCIsImdldE9iamVjdFR5cGUiLCJwYXJhbXMiLCJhZGRPYmplY3RUeXBlIiwid3JpdGVfa2V5IiwiQXV0aG9yaXphdGlvbiIsIlBPU1QiLCJlZGl0T2JqZWN0VHlwZSIsIlBBVENIIiwiZGVsZXRlT2JqZWN0VHlwZSIsIkRFTEVURSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvYnVja2V0L29iamVjdC10eXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVVJJIH0gPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbnN0YW50cycpXG5jb25zdCBIVFRQX01FVEhPRFMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2h0dHBfbWV0aG9kcycpXG5jb25zdCB7IHJlcXVlc3RIYW5kbGVyIH0gPSByZXF1aXJlKCcuLi9oZWxwZXJzL3JlcXVlc3RfaGFuZGxlcicpXG5cbmxldCBoZWFkZXJzXG5cbmNvbnN0IG9iamVjdFR5cGVNZXRob2RzID0gKGJ1Y2tldF9jb25maWcpID0+ICh7XG4gIGdldE9iamVjdFR5cGVzOiAoKSA9PiB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBgJHtVUkl9L2J1Y2tldHMvJHtidWNrZXRfY29uZmlnLnNsdWd9L29iamVjdC10eXBlcz9yZWFkX2tleT0ke2J1Y2tldF9jb25maWcucmVhZF9rZXl9YFxuICAgIHJldHVybiByZXF1ZXN0SGFuZGxlcihIVFRQX01FVEhPRFMuR0VULCBlbmRwb2ludClcbiAgfSxcbiAgZ2V0T2JqZWN0VHlwZTogKHBhcmFtcykgPT4ge1xuICAgIGNvbnN0IGVuZHBvaW50ID0gYCR7VVJJfS9idWNrZXRzLyR7YnVja2V0X2NvbmZpZy5zbHVnfS9vYmplY3QtdHlwZXMvJHtwYXJhbXMuc2x1Z30/cmVhZF9rZXk9JHtidWNrZXRfY29uZmlnLnJlYWRfa2V5fWBcbiAgICByZXR1cm4gcmVxdWVzdEhhbmRsZXIoSFRUUF9NRVRIT0RTLkdFVCwgZW5kcG9pbnQpXG4gIH0sXG4gIGFkZE9iamVjdFR5cGU6IChwYXJhbXMpID0+IHtcbiAgICBjb25zdCBlbmRwb2ludCA9IGAke1VSSX0vYnVja2V0cy8ke2J1Y2tldF9jb25maWcuc2x1Z30vb2JqZWN0LXR5cGVzYFxuICAgIGlmIChidWNrZXRfY29uZmlnLndyaXRlX2tleSkge1xuICAgICAgaGVhZGVycyA9IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2J1Y2tldF9jb25maWcud3JpdGVfa2V5fWBcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RIYW5kbGVyKEhUVFBfTUVUSE9EUy5QT1NULCBlbmRwb2ludCwgcGFyYW1zLCBoZWFkZXJzKVxuICB9LFxuICBlZGl0T2JqZWN0VHlwZTogKHBhcmFtcykgPT4ge1xuICAgIGNvbnN0IGVuZHBvaW50ID0gYCR7VVJJfS9idWNrZXRzLyR7YnVja2V0X2NvbmZpZy5zbHVnfS9vYmplY3QtdHlwZXMvJHtwYXJhbXMuc2x1Z31gXG4gICAgaWYgKGJ1Y2tldF9jb25maWcud3JpdGVfa2V5KSB7XG4gICAgICBoZWFkZXJzID0ge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YnVja2V0X2NvbmZpZy53cml0ZV9rZXl9YFxuICAgICAgfVxuICAgIH1cbiAgICAvLyBSZW1vdmUgc2x1Z1xuICAgIGRlbGV0ZSBwYXJhbXMuc2x1Z1xuICAgIHJldHVybiByZXF1ZXN0SGFuZGxlcihIVFRQX01FVEhPRFMuUEFUQ0gsIGVuZHBvaW50LCBwYXJhbXMsIGhlYWRlcnMpXG4gIH0sXG4gIGRlbGV0ZU9iamVjdFR5cGU6IChwYXJhbXMpID0+IHtcbiAgICBjb25zdCBlbmRwb2ludCA9IGAke1VSSX0vYnVja2V0cy8ke2J1Y2tldF9jb25maWcuc2x1Z30vb2JqZWN0LXR5cGVzLyR7cGFyYW1zLnNsdWd9YFxuICAgIGlmIChidWNrZXRfY29uZmlnLndyaXRlX2tleSkge1xuICAgICAgaGVhZGVycyA9IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2J1Y2tldF9jb25maWcud3JpdGVfa2V5fWBcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RIYW5kbGVyKEhUVFBfTUVUSE9EUy5ERUxFVEUsIGVuZHBvaW50LCBudWxsLCBoZWFkZXJzKVxuICB9XG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9iamVjdFR5cGVNZXRob2RzXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsZUFBZ0JBLE9BQU8sQ0FBQyxzQkFBRCxDQUF2QjtBQUFBLElBQVFDLEdBQVIsWUFBUUEsR0FBUjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdGLE9BQU8sQ0FBQyx5QkFBRCxDQUE1Qjs7QUFDQSxnQkFBMkJBLE9BQU8sQ0FBQyw0QkFBRCxDQUFsQztBQUFBLElBQVFHLGNBQVIsYUFBUUEsY0FBUjs7QUFFQSxJQUFJQyxPQUFKOztBQUVBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ0MsYUFBRDtFQUFBLE9BQW9CO0lBQzVDQyxjQUFjLEVBQUUsMEJBQU07TUFDcEIsSUFBTUMsUUFBUSxhQUFNUCxHQUFOLHNCQUFxQkssYUFBYSxDQUFDRyxJQUFuQyxvQ0FBaUVILGFBQWEsQ0FBQ0ksUUFBL0UsQ0FBZDtNQUNBLE9BQU9QLGNBQWMsQ0FBQ0QsWUFBWSxDQUFDUyxHQUFkLEVBQW1CSCxRQUFuQixDQUFyQjtJQUNELENBSjJDO0lBSzVDSSxhQUFhLEVBQUUsdUJBQUNDLE1BQUQsRUFBWTtNQUN6QixJQUFNTCxRQUFRLGFBQU1QLEdBQU4sc0JBQXFCSyxhQUFhLENBQUNHLElBQW5DLDJCQUF3REksTUFBTSxDQUFDSixJQUEvRCx1QkFBZ0ZILGFBQWEsQ0FBQ0ksUUFBOUYsQ0FBZDtNQUNBLE9BQU9QLGNBQWMsQ0FBQ0QsWUFBWSxDQUFDUyxHQUFkLEVBQW1CSCxRQUFuQixDQUFyQjtJQUNELENBUjJDO0lBUzVDTSxhQUFhLEVBQUUsdUJBQUNELE1BQUQsRUFBWTtNQUN6QixJQUFNTCxRQUFRLGFBQU1QLEdBQU4sc0JBQXFCSyxhQUFhLENBQUNHLElBQW5DLGtCQUFkOztNQUNBLElBQUlILGFBQWEsQ0FBQ1MsU0FBbEIsRUFBNkI7UUFDM0JYLE9BQU8sR0FBRztVQUNSWSxhQUFhLG1CQUFZVixhQUFhLENBQUNTLFNBQTFCO1FBREwsQ0FBVjtNQUdEOztNQUNELE9BQU9aLGNBQWMsQ0FBQ0QsWUFBWSxDQUFDZSxJQUFkLEVBQW9CVCxRQUFwQixFQUE4QkssTUFBOUIsRUFBc0NULE9BQXRDLENBQXJCO0lBQ0QsQ0FqQjJDO0lBa0I1Q2MsY0FBYyxFQUFFLHdCQUFDTCxNQUFELEVBQVk7TUFDMUIsSUFBTUwsUUFBUSxhQUFNUCxHQUFOLHNCQUFxQkssYUFBYSxDQUFDRyxJQUFuQywyQkFBd0RJLE1BQU0sQ0FBQ0osSUFBL0QsQ0FBZDs7TUFDQSxJQUFJSCxhQUFhLENBQUNTLFNBQWxCLEVBQTZCO1FBQzNCWCxPQUFPLEdBQUc7VUFDUlksYUFBYSxtQkFBWVYsYUFBYSxDQUFDUyxTQUExQjtRQURMLENBQVY7TUFHRCxDQU55QixDQU8xQjs7O01BQ0EsT0FBT0YsTUFBTSxDQUFDSixJQUFkO01BQ0EsT0FBT04sY0FBYyxDQUFDRCxZQUFZLENBQUNpQixLQUFkLEVBQXFCWCxRQUFyQixFQUErQkssTUFBL0IsRUFBdUNULE9BQXZDLENBQXJCO0lBQ0QsQ0E1QjJDO0lBNkI1Q2dCLGdCQUFnQixFQUFFLDBCQUFDUCxNQUFELEVBQVk7TUFDNUIsSUFBTUwsUUFBUSxhQUFNUCxHQUFOLHNCQUFxQkssYUFBYSxDQUFDRyxJQUFuQywyQkFBd0RJLE1BQU0sQ0FBQ0osSUFBL0QsQ0FBZDs7TUFDQSxJQUFJSCxhQUFhLENBQUNTLFNBQWxCLEVBQTZCO1FBQzNCWCxPQUFPLEdBQUc7VUFDUlksYUFBYSxtQkFBWVYsYUFBYSxDQUFDUyxTQUExQjtRQURMLENBQVY7TUFHRDs7TUFDRCxPQUFPWixjQUFjLENBQUNELFlBQVksQ0FBQ21CLE1BQWQsRUFBc0JiLFFBQXRCLEVBQWdDLElBQWhDLEVBQXNDSixPQUF0QyxDQUFyQjtJQUNEO0VBckMyQyxDQUFwQjtBQUFBLENBQTFCOztBQXdDQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLGlCQUFqQiJ9